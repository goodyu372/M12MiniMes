<?xml version="1.0"?>
<configuration>
  <configSections>
    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler, log4net"/>
  </configSections>
  <!--日志记录组件配置-->
  <log4net>
    <root>
      <!--控制级别，由低到高: ALL|DEBUG|INFO|WARN|ERROR|FATAL|OFF-->
      <!--比如定义级别为INFO，则INFO级别向下的级别，比如DEBUG日志将不会被记录-->
      <!--如果没有定义LEVEL的值，则缺省为DEBUG-->
      <level value="ALL" />
      <appender-ref ref="ConsoleAppender"/>
      <appender-ref ref="RollingLogFileAppender" />
    </root>
    
    <!-- Console部分log输出格式的设定 -->
    <appender name="ConsoleAppender" type="log4net.Appender.ConsoleAppender">
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%date [%thread] %-5level %logger %ndc - %message%newline" />
      </layout>
    </appender>
    <!-- 日志文件部分log输出格式的设定 -->
    <appender name="RollingLogFileAppender" type="log4net.Appender.RollingFileAppender">
      <file value="Log\log_" />
      <!--是否追加到文件,默认为true，通常无需设置-->
      <appendToFile value="true" />
      <!--变换的形式为日期，这种情况下每天只有一个日志-->
      <rollingStyle value="Date" />
      <!--日期的格式，每天换一个文件记录，如不设置则永远只记录一天的日志，需设置-->
      <datePattern value="yyyyMMdd'.txt'" />
      <staticLogFileName value="false" /> 
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%date [%t]%-5p - %m%n"/>       
        <!--
        %m(message):输出的日志消息；
        %n(newline):换行；
        %d(datetime):输出当前语句运行的时刻；
        %r(runtime):输出程序从运行到执行到当前语句时消耗的毫秒数；
        %t(threadid):当前语句所在的线程ID ；
        %p(priority): 日志的当前日志级别；
        %c(class):当前日志对象的名称；
        %L：输出语句所在的行号；
        %F：输出语句所在的文件名； 
        %-10：表示最小长度为10，如果不够，则用空格填充；
        -->
      </layout>
    </appender>

  </log4net>
</configuration>
